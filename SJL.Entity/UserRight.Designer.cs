//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("SJL.Entity", "FK_RoleRight_ApplicationModule", "ApplicationModule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SJL.Entity.ApplicationModule), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SJL.Entity.RoleRight), true)]
[assembly: EdmRelationshipAttribute("SJL.Entity", "FK_RoleRight_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SJL.Entity.UserRole), "RoleRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SJL.Entity.RoleRight), true)]
[assembly: EdmRelationshipAttribute("SJL.Entity", "FK_User_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SJL.Entity.UserRole), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SJL.Entity.User), true)]

#endregion

namespace SJL.Entity
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class UserRightContext : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“UserRightContext”部分中的连接字符串初始化新 UserRightContext 对象。
        /// </summary>
        public UserRightContext() : base("name=UserRightContext", "UserRightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UserRightContext 对象。
        /// </summary>
        public UserRightContext(string connectionString) : base(connectionString, "UserRightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 UserRightContext 对象。
        /// </summary>
        public UserRightContext(EntityConnection connection) : base(connection, "UserRightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ApplicationModule> ApplicationModule
        {
            get
            {
                if ((_ApplicationModule == null))
                {
                    _ApplicationModule = base.CreateObjectSet<ApplicationModule>("ApplicationModule");
                }
                return _ApplicationModule;
            }
        }
        private ObjectSet<ApplicationModule> _ApplicationModule;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<RoleRight> RoleRight
        {
            get
            {
                if ((_RoleRight == null))
                {
                    _RoleRight = base.CreateObjectSet<RoleRight>("RoleRight");
                }
                return _RoleRight;
            }
        }
        private ObjectSet<RoleRight> _RoleRight;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserRole> UserRole
        {
            get
            {
                if ((_UserRole == null))
                {
                    _UserRole = base.CreateObjectSet<UserRole>("UserRole");
                }
                return _UserRole;
            }
        }
        private ObjectSet<UserRole> _UserRole;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 ApplicationModule EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToApplicationModule(ApplicationModule applicationModule)
        {
            base.AddObject("ApplicationModule", applicationModule);
        }
    
        /// <summary>
        /// 用于向 RoleRight EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoleRight(RoleRight roleRight)
        {
            base.AddObject("RoleRight", roleRight);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 UserRole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserRole(UserRole userRole)
        {
            base.AddObject("UserRole", userRole);
        }

        #endregion

        #region 函数导入
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public int refreshRoleRight()
        {
            return base.ExecuteFunction("refreshRoleRight");
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SJL.Entity", Name="ApplicationModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationModule : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ApplicationModule 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="uRL">URL 属性的初始值。</param>
        /// <param name="isPublic">IsPublic 属性的初始值。</param>
        public static ApplicationModule CreateApplicationModule(global::System.String id, global::System.String name, global::System.String uRL, global::System.Boolean isPublic)
        {
            ApplicationModule applicationModule = new ApplicationModule();
            applicationModule.ID = id;
            applicationModule.Name = name;
            applicationModule.URL = uRL;
            applicationModule.IsPublic = isPublic;
            return applicationModule;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String URL
        {
            get
            {
                return _URL;
            }
            set
            {
                OnURLChanging(value);
                ReportPropertyChanging("URL");
                _URL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("URL");
                OnURLChanged();
            }
        }
        private global::System.String _URL;
        partial void OnURLChanging(global::System.String value);
        partial void OnURLChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_RoleRight_ApplicationModule", "RoleRight")]
        public EntityCollection<RoleRight> RoleRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("SJL.Entity.FK_RoleRight_ApplicationModule", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("SJL.Entity.FK_RoleRight_ApplicationModule", "RoleRight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SJL.Entity", Name="RoleRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleRight : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 RoleRight 对象。
        /// </summary>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="moduleID">ModuleID 属性的初始值。</param>
        /// <param name="theRight">TheRight 属性的初始值。</param>
        public static RoleRight CreateRoleRight(global::System.String roleID, global::System.String moduleID, global::System.String theRight)
        {
            RoleRight roleRight = new RoleRight();
            roleRight.RoleID = roleID;
            roleRight.ModuleID = moduleID;
            roleRight.TheRight = theRight;
            return roleRight;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                if (_ModuleID != value)
                {
                    OnModuleIDChanging(value);
                    ReportPropertyChanging("ModuleID");
                    _ModuleID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ModuleID");
                    OnModuleIDChanged();
                }
            }
        }
        private global::System.String _ModuleID;
        partial void OnModuleIDChanging(global::System.String value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TheRight
        {
            get
            {
                return _TheRight;
            }
            set
            {
                OnTheRightChanging(value);
                ReportPropertyChanging("TheRight");
                _TheRight = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TheRight");
                OnTheRightChanged();
            }
        }
        private global::System.String _TheRight;
        partial void OnTheRightChanging(global::System.String value);
        partial void OnTheRightChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_RoleRight_ApplicationModule", "ApplicationModule")]
        public ApplicationModule ApplicationModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationModule>("SJL.Entity.FK_RoleRight_ApplicationModule", "ApplicationModule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationModule>("SJL.Entity.FK_RoleRight_ApplicationModule", "ApplicationModule").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationModule> ApplicationModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationModule>("SJL.Entity.FK_RoleRight_ApplicationModule", "ApplicationModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationModule>("SJL.Entity.FK_RoleRight_ApplicationModule", "ApplicationModule", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_RoleRight_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_RoleRight_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_RoleRight_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_RoleRight_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("SJL.Entity.FK_RoleRight_UserRole", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SJL.Entity", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="password">Password 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="roleID">RoleID 属性的初始值。</param>
        /// <param name="department">Department 属性的初始值。</param>
        public static User CreateUser(global::System.String id, global::System.String password, global::System.String userName, global::System.String roleID, global::System.String department)
        {
            User user = new User();
            user.ID = id;
            user.Password = password;
            user.UserName = userName;
            user.RoleID = roleID;
            user.Department = department;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.String _RoleID;
        partial void OnRoleIDChanging(global::System.String value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_User_UserRole", "UserRole")]
        public UserRole UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_User_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_User_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("SJL.Entity.FK_User_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("SJL.Entity.FK_User_UserRole", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SJL.Entity", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserRole 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static UserRole CreateUserRole(global::System.String id, global::System.String name)
        {
            UserRole userRole = new UserRole();
            userRole.ID = id;
            userRole.Name = name;
            return userRole;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_RoleRight_UserRole", "RoleRight")]
        public EntityCollection<RoleRight> RoleRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleRight>("SJL.Entity.FK_RoleRight_UserRole", "RoleRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleRight>("SJL.Entity.FK_RoleRight_UserRole", "RoleRight", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SJL.Entity", "FK_User_UserRole", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SJL.Entity.FK_User_UserRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SJL.Entity.FK_User_UserRole", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
